kotlin
de claração de variavel = var
constante = val 
código começa com chamada de função = fun(){

}

os tipos numericos inteiros podem ser classficados: 
Byte : 8 bits  |   min  -128  |    max    127  |
Short : 16 bits  |  min  -32768  | max  32767  |
Int : 32 bits| min-2,147,483,648 (-231) |max 2,147,483,647 (231 - 1)  |
Long : 64bits| min -9,223,372,036,854,775,808 (-263) | max 9,223,372,036,854,775,807 (263 - 1)  |

para especificar a classificação do tipo, usar a seguinte escrita:

val nomedavariavel: Byte = valor
val nomedavariavel: Short = valor
val nomedavariavel = os valores inteiros não precisam de especificação
val nomedavariavel: Long = valor ou val nomedavariavel = valorL


no caso de valores reais as classificações são as desempre, float e double:

float:
 var nomedavariavel = valorf (Exs: 1.2f,  3.92f, 2.349f)

 float pode ter etre 6 e 7 casas decimais  e o double entre 15 e 16

 double:
 var nomedavariavel: Double = valor

 para verificar o tipo do dado armazenado é possível utilizar println(nomedavariavel is Int) o nome do tipo deve começar com a letra maiuscula, o retorno será true ou false. 

 para converter o tipo do dado utiliza-se a função toNomedodado, ex:
 println(nomedavariavel.toFloat)
 println(nomedavariavel.toDouble)


 *importante - as conversões só podem ser feitas com dados que caibam no tipo, tendo como referencia o valor minimo e maximo de cada tipo

 *Importante - em caso de divisão em que o resultado da operação utilizando dois inteiros for um valor com ponto flutuante, deve se escrever dessa forma. 

 val nomedavariavel = 5.toDouble()/2.toDouble 

 ou

 val nomedavariavel = 5f/2f
 
 ou

 val nomedavariavel = 5f/2 (ou 5/2f)

 No caso acima o resultado será 2.5 se não houver conversão o valor será apenas 2

 *usando os operadores de comparação só é possível comparar dados do mesmo tipo, caso contrário ocorrerá erro na saída. 
 ex: 
 val a = 2
 val b:Short = 2

 println(a==b) - nesse caso a saída será um erro

 println(a==b.toInt()) - nesse caso a saída será true


 a escrita das estruturas condicionais se assemelham as demais linguagens

